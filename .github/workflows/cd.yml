name: Deploy Static Site to GitHub Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

# Default to bash
defaults:
  run:
    shell: bash

jobs:
  # Build job (even if you have no build process, you still need this to ensure static files are prepared)
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5
      - name: Install Node.js dependencies (optional, only if using JS build tools)
        run: "[[ -f package-lock.json || -f npm-shrinkwrap.json ]] && npm ci || true"
      - name: Build assets (optional, if using build tools like Webpack or other bundlers)
        run: |
          # Example build command if using tools like Webpack, Parcel, etc.
          # npm run build
          echo "No build step needed for this JS/HTML/CSS project"  # Remove if you're using a build process

      # If you're not using a build process, skip this step
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./  # Path to your static site files (e.g., your `index.html`, CSS, and JS files)

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
